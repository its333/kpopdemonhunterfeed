---
Accessibility: ensure images have `alt`, controls have labels, focus states are visible.
6.
Performance: responsive images, prefetch links, avoid N+1 calls.


## TODO Backlog (ordered)
- Add real providers: `youtube`, `rss`, `shopify`, `instagram` (or image CDN)
- Add Redis cache and SWR on client
- Add pagination with `cursor` + `limit`
- Add `/products` detail route and basic cart (optional)
- Unit tests for providers


## Non‑Goals
- No server‑side rendering of third‑party scripts on first pass.
- No heavy UI libraries.


---
==== file: .cursorrules ====
{
"project": "Kpop Demon Hunter Feed",
"style": {
"language": "TypeScript",
"framework": "Next.js 15 (App Router)",
"ui": "TailwindCSS"
},
"conventions": [
"Prefer small components in components/",
"Use strict TS and explicit types",
"Avoid any",
"Use semantic HTML and aria labels",
"Write pure functions in lib/"
],
"tasks": {
"addProvider": "Create lib/providers/<name>.ts exporting async fetch<Name>(ctx) -> ProviderResult, wire in lib/providers/index.ts",
"addCache": "Install upstash/redis and cache provider results for 60s on Vercel edge"
}
}


---
==== file: .env.example ====
# Put real API keys when you wire real providers
YOUTUBE_API_KEY=
SHOPIFY_STOREFRONT_TOKEN=
NEXT_PUBLIC_SITE_URL=http://localhost:3000


---
==== file: PROMPTS/agent-tasks.md ====
# Cursor Agent Tasks (paste in Composer)


## 1) Wire YouTube videos provider
**Goal:** Replace mock videos with real data from YouTube for query `kpop demon hunter`.


**Steps:**
- Add `lib/providers/youtube.ts` using YouTube Data API v3 `search` + `videos` for stats (popularity = viewCount).
- Map to `FeedItem` with `type: 'video'`.
- Merge into `fetchFeed()` when `type==='video'` or `type==='all'`.
- Add 60s Redis cache by `(type, sort)` key using Upstash.


## 2) Add RSS news provider
**Goal:** Pull news from a list of K‑pop sites’ RSS feeds.
- Install `rss-parser`.
- Normalize posts to `FeedItem` with thumbnails if provided.


## 3) Product provider (Shopify storefront)
- Install `@shopify/storefront-api-client`.
- Fetch featured products, map price to `priceCents`.


## 4) Cursor QA pass
- Ask Agent to add unit tests for providers and a11y checks for images/titles.

